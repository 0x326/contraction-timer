name: Build and deploy Docker image to Azure Web App - contraction-timer-api

on:
  push:
    branches:
      - master
    paths:
      - 'server/**'
      - '.github/workflows/master_contraction-timer-api.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: contraction-timer-api
    outputs:
      image: ${{ steps.docker-publish.outputs.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build with Parcel
        run: npm run build --if-present
        env:
          NODE_OPTIONS: --openssl-legacy-provider

      - name: Run tests
        run: npm test --if-present

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker-publish
        working-directory: ${{ github.workspace }}
        run: |
          OWNER="${GITHUB_REPOSITORY_OWNER,,}"
          IMAGE_URI="ghcr.io/$OWNER/$IMAGE_NAME:${GITHUB_SHA}"
          docker build -f server/Dockerfile -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"
          echo "image=$IMAGE_URI" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_472FEB1C96A843CC968325394AFF1256 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_498CE618BC8B4059BDF20BFB621955FA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_62B72743BD084628A81414BB1C47AA16 }}

      - name: Configure Web App container image
        env:
          WEBAPP_NAME: contraction-timer-api
          IMAGE_URI: ${{ needs.build.outputs.image }}
        run: |
          if [ -z "${{ secrets.GHCR_USERNAME }}" ] || [ -z "${{ secrets.GHCR_TOKEN }}" ]; then
            echo "Secrets GHCR_USERNAME and GHCR_TOKEN must be configured with GitHub Container Registry credentials." >&2
            exit 1
          fi

          RESOURCE_GROUP=$(az webapp show --name "$WEBAPP_NAME" --query resourceGroup -o tsv)
          if [ -z "$RESOURCE_GROUP" ]; then
            echo "Unable to determine resource group for $WEBAPP_NAME" >&2
            exit 1
          fi

          SLOT_NAME="Production"
          SLOT_EXISTS=$(az webapp deployment slot list --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP" --query "[?name=='$SLOT_NAME'].name" -o tsv)

          if [ -n "$SLOT_EXISTS" ]; then
            az webapp config container set \
              --name "$WEBAPP_NAME" \
              --resource-group "$RESOURCE_GROUP" \
              --slot "$SLOT_NAME" \
              --docker-custom-image-name "$IMAGE_URI" \
              --docker-registry-server-url https://ghcr.io \
              --docker-registry-server-user "${{ secrets.GHCR_USERNAME }}" \
              --docker-registry-server-password "${{ secrets.GHCR_TOKEN }}"

            az webapp restart --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP" --slot "$SLOT_NAME"
          else
            az webapp config container set \
              --name "$WEBAPP_NAME" \
              --resource-group "$RESOURCE_GROUP" \
              --docker-custom-image-name "$IMAGE_URI" \
              --docker-registry-server-url https://ghcr.io \
              --docker-registry-server-user "${{ secrets.GHCR_USERNAME }}" \
              --docker-registry-server-password "${{ secrets.GHCR_TOKEN }}"

            az webapp restart --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP"
          fi
